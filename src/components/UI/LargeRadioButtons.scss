/* TOGGLE STYLING */
@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,600');

/* VARS */
$open-sans: 'Open Sans', 'Helvetica', sans-serif;

$darkNavy: #213140;
$teal1: #66b3fb;
$teal2: #4b9dea;
$charcoal: #555555;
$gold: #b6985a;

$activeShadow: 0 0 10px rgba($teal1, 0.5);

/* MIXINS */
@mixin focusOutline {
  outline: dotted 1px #ccc;
  outline-offset: 0.45rem;
}
@mixin hideInput {
  width: 0;
  height: 0;
  position: absolute;
  left: -9999px;
}
@mixin breakpoint($point) {
  @if $point == 1100 {
    @media (max-width: 1100px) {
      @content;
    }
  } @else if $point == 800 {
    @media (max-width: 800px) {
      @content;
    }
  }
}
.toggle {
  margin: 0 0 0.2rem;
  box-sizing: border-box;
  font-size: 0;
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-start;
  align-items: stretch;
  input {
    @include hideInput;
  }
  input + label {
    margin: 0 5px;
    padding: 0.5rem;
    box-sizing: border-box;
    position: relative;
    display: inline-block;
    border: solid 1px #ddd;
    background-color: #fff;
    font-size: 0.8rem;
    line-height: 140%;
    font-weight: 600;
    text-align: center;
    box-shadow: 0 0 0 rgba(255, 255, 255, 0);
    transition: border-color 0.15s ease-out, color 0.25s ease-out,
      background-color 0.15s ease-out, box-shadow 0.15s ease-out;

    & {
      border-radius: 6px;
    }
  }
  input:hover + label {
    border-color: $darkNavy;
  }
  input:checked + label {
    background-color: $teal2;
    color: #fff;
    box-shadow: $activeShadow;
    border-color: $teal2;
    z-index: 0;
  }
  input:focus + label {
    @include focusOutline;
  }

  @include breakpoint(800) {
    input + label {
      padding: 0.75rem 0.25rem;
      flex: 0 0 50%;
      display: flex;
      justify-content: center;
      align-items: center;
    }
  }
}

/* STYLING FOR THE STATUS HELPER TEXT FOR THE DEMO */
.status {
  margin: 0;
  font-size: 0.8rem;
  font-weight: 400;
  span {
    font-weight: 600;
    color: $gold;
    &:first-of-type {
      display: inline;
    }
    &:last-of-type {
      display: none;
    }
  }
  @include breakpoint(800) {
    span {
      &:first-of-type {
        display: none;
      }
      &:last-of-type {
        display: inline;
      }
    }
  }
}
